Script started on 2020-10-16 21:06:54+03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo PATH
PATH
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo PATH$PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ savepath[K[K[K[K[K[K[K[KSAC[KVEPATH=%[K$PATH
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ LS
LS: command not found
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ ls
 ahmed.txt   [0m[01;34mDownloads[0m    foo.txt   myfirst    s                 [01;34mVideos[0m
 basil.txt   [01;34mfile1.txt[0m    [01;34mlab3[0m      myyfirst   [01;34mTemplates[0m
 [01;34mDesktop[0m     file.exrc    [01;34mlab4[0m      [01;34mPictures[0m   testmacros.txt
 [01;34mDocuments[0m   file.vimrc   [01;34mMusic[0m     [01;34mPublic[0m    'Untitled 1.odt'
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ lsLSSAVEPATH=$PATH[4Pecho $PATH[1PPATH[4Pls -alecho $PATH[6Pcd ~echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $PATHls[KLSSAVEPATH=$PATH[4Pecho $PATH[1PPATH[4Pls -aecho PATH[4Pls -alecho $PATH[6Pcd ~[1P~[KCDecho $PATHCD[Kged[K[K[K[K[Kgetit /cte[K[K[Ketc/po

Command 'getit' not found, did you mean:

  command 'gedit' from snap gedit (3.36.2+git3.8c9da67ab)
  command 'gedit' from deb gedit (3.36.2-0ubuntu1)
  command 'gitit' from deb gitit (0.12.3.1+dfsg-1build4)

See 'snap info <snapname>' for additional versions.

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ getit /etc/po[K[K[K[K[K[K[K.bash

Command 'getit' not found, did you mean:

  command 'gedit' from snap gedit (3.36.2+git3.8c9da67ab)
  command 'gitit' from deb gitit (0.12.3.1+dfsg-1build4)
  command 'gedit' from deb gedit (3.36.2-0ubuntu1)

See 'snap info <snapname>' for additional versions.

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .bash
.bash: No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .bash_rc
.bash_rc: No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .bash_rc[K[1@getit[C[C[C[C[C[C[1Pless[C[C[C[C[C[C[C[1Pashpash
.pash: No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .pashbash_rc[1Prc
[?1049h[22;0;0t[?1h=# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
[7m.bashrc[27m[K[K [KESCESC[KOO[KBB[Kshopt -s checkwinsize
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# If set, the pattern "**" used in a pathname expansion context will
:[K[K [KESCESC[KOO[KBB[K# match all files and zero or more directories and subdirectories.
:[K[K [KESCESC[KOO[KBB[K#shopt -s globstar
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# make less more friendly for non-text input files, see lesspipe(1)
:[K[K [KESCESC[KOO[KBB[K[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# set variable identifying the chroot you work in (used in the prompt below)
:[K[K [KESCESC[KOO[KBB[Kif [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
:[K[K [KESCESC[KOO[KBB[K    debian_chroot=$(cat /etc/debian_chroot)
:[K[K [KESCESC[KOO[KBB[Kfi
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# set a fancy prompt (non-color, unless we know we "want" color)
:[K[K [KESCESC[KOO[KBB[Kcase "$TERM" in
:[K[K [KESCESC[KOO[KBB[K    xterm-color|*-256color) color_prompt=yes;;
:[K[K [KESCESC[KOO[KBB[Kesac
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# uncomment for a colored prompt, if the terminal has the capability; turned
:[K[K [KESCESC[KOO[KBB[K# off by default to not distract the user: the focus in a terminal window
:[K[K [KESCESC[KOO[KBB[K# should be on the output of commands, not on the prompt
:[K[K [KESCESC[KOO[KBB[K#force_color_prompt=yes
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[Kif [ -n "$force_color_prompt" ]; then
:[K[K [KESCESC[KOO[KBB[K    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
:[K[K [KESCESC[KOO[KBB[K        # We have color support; assume it's compliant with Ecma-48
:[K[K [KESCESC[KOO[KBB[K        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
:[K[K [KESCESC[KOO[KBB[K        # a case would tend to support setf rather than setaf.)
:[K[K [KESCESC[KOO[KBB[K        color_prompt=yes
:[K[K [KESCESC[KOO[KBB[K    else
:[K[K [KESCESC[KOO[KBB[K        color_prompt=
:[K[K [KESCESC[KOO[KBB[K    fi
:[K[K [KESCESC[KOO[KBB[Kfi
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[Kif [ "$color_prompt" = yes ]; then
:[K[K [KESCESC[KOO[KBB[K    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\0 :[K[K [KESCESC[KOO[KBB[K33[01;34m\]\w\[\033[00m\]\$ '
:[K[K [KESCESC[KOO[KBB[Kelse
:[K[K [KESCESC[KOO[KBB[K    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
:[K[K [KESCESC[KOO[KBB[Kfi
:[K[K [KESCESC[KOO[KBB[Kunset color_prompt force_color_prompt
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# If this is an xterm set the title to user@host:dir
:[K[K [KESCESC[KOO[KBB[Kcase "$TERM" in
:[K[K [KESCESC[KOO[KBB[Kxterm*|rxvt*)
:[K[K [KESCESC[KOO[KBB[K    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
:[K[K [KESCESC[KOO[KBB[K    ;;
:[K[K [KESCESC[KOO[KBB[K*)
:[K[K [KESCESC[KOO[KBB[K    ;;
:[K[K [KESCESC[KOO[KBB[Kesac
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# enable color support of ls and also add handy aliases
:[K[K [KESCESC[KOO[KBB[Kif [ -x /usr/bin/dircolors ]; then
:[K[K [KESCESC[KOO[KBB[K    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dirco :[K[K [KESCESC[KOO[KBB[Klors -b)"
:[K[K [KESCESC[KOO[KBB[K    alias ls='ls --color=auto'
:[K[K [KESCESC[KOO[KBB[K    #alias dir='dir --color=auto'
:[K[K [KESCESC[KOO[KBB[K    #alias vdir='vdir --color=auto'
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K    alias grep='grep --color=auto'
:[K[K [KESCESC[KOO[KBB[K    alias fgrep='fgrep --color=auto'
:[K[K [KESCESC[KOO[KBB[K    alias egrep='egrep --color=auto'
:[K[K [KESCESC[KOO[KBB[Kfi
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# colored GCC warnings and errors
:[K[K [KESCESC[KOO[KBB[K#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:qu :[K[K [KESCESC[KOO[KBB[Kote=01'
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# some more ls aliases
:[K[K [KESCESC[KOO[KBB[Kalias ll='ls -alF'
:[K[K [KESCESC[KOO[KBB[Kalias la='ls -A'
:[K[K [KESCESC[KOO[KBB[Kalias l='ls -CF'
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# Add an "alert" alias for long running commands.  Use like so:
:[K[K [KESCESC[KOO[KBB[K#   sleep 10; alert
:[K[K [KESCESC[KOO[KBB[Kalias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo :[K[K [KESCESC[KOO[KBB[K error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\' :[K[K [KESCESC[KOO[KBB[K')"'
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# Alias definitions.
:[K[K [KESCESC[KOO[KBB[K# You may want to put all your additions into a separate file like
:[K[K [KESCESC[KOO[KBB[K# ~/.bash_aliases, instead of adding them here directly.
:[K[K [KESCESC[KOO[KBB[K# See /usr/share/doc/bash-doc/examples in the bash-doc package.
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[Kif [ -f ~/.bash_aliases ]; then
:[K[K [KESCESC[KOO[KBB[K    . ~/.bash_aliases
:[K[K [KESCESC[KOO[KBB[Kfi
:[K[K [KESCESC[KOO[KBB[K
:[K[K [KESCESC[KOO[KBB[K# enable programmable completion features (you don't need to enable
:[K[K [KESCESC[KOO[KBB[K# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
:[K[K [KESCESC[KOO[KBB[K# sources /etc/bash.bashrc).
:[K[K [KESCESC[KOO[KBB[Kif ! shopt -oq posix; then
:[K[K [KESCESC[KOO[KBB[K  if [ -f /usr/share/bash-completion/bash_completion ]; then
:[K[K [KESCESC[KOO[KBB[K    . /usr/share/bash-completion/bash_completion
:[K[K [KESCESC[KOO[KBB[K  elif [ -f /etc/bash_completion ]; then
:[K[K [KESCESC[KOO[KBB[K    . /etc/bash_completion
:[K[K [KESCESC[KOO[KBB[K  fi
:[K[K [KESCESC[KOO[KBB[Kfi
[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KBB[K[K[7m(END)[27m[K[K [KESCESC[KOO[KAA[K[HM#   sleep 10; alert
[24;1H[K:[K[K [KESCESC[KOO[KBB[Kfi
[7m(END)[27m[K[K[K[7m(END)[27m[K[K [KESCESC[KESCESC[K [K::[Kww[K[7m(END)[27m[K[K[?1l>[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .bashrc[C[K[K
.bash: No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ ls -al
total 360
drwxr-xr-x 19 codebind codebind  4096 Oct 10 17:27  [0m[01;34m.[0m
drwxr-xr-x  3 root     root      4096 Sep 18 15:49  [01;34m..[0m
-rw-rw-r--  1 codebind codebind   100 Sep 24 10:25  ahmed.txt
-rw-------  1 codebind codebind 14111 Oct 16 21:06  .bash_history
-rw-r--r--  1 codebind codebind   220 Sep 18 15:49  .bash_logout
-rw-r--r--  1 codebind codebind  3771 Sep 18 15:49  .bashrc
-rw-rw-r--  1 codebind codebind   404 Sep 30 22:59  basil.txt
drwx------ 13 codebind codebind  4096 Oct  3 16:11  [01;34m.cache[0m
drwx------ 13 codebind codebind  4096 Sep 20 18:58  [01;34m.config[0m
drwxr-xr-x  3 codebind codebind  4096 Oct 16 21:06  [01;34mDesktop[0m
drwxr-xr-x  2 codebind codebind  4096 Oct  4 18:26  [01;34mDocuments[0m
drwxr-xr-x  2 codebind codebind  4096 Oct 10 17:26  [01;34mDownloads[0m
-rw-rw-r--  1 codebind codebind     9 Sep 30 23:50  .excs
-rw-------  1 codebind codebind 12288 Sep 24 10:11  .ff.swp
drwxrwxr-x  2 codebind codebind  4096 Oct  3 17:23  [01;34mfile1.txt[0m
-rw-rw-r--  1 codebind codebind   119 Sep 30 23:46  file.exrc
-rw-rw-r--  1 codebind codebind    25 Sep 30 23:53  file.vimrc
-rw-------  1 codebind codebind 12288 Sep 24 08:51  .fod.txt.swn
-rw-------  1 codebind codebind 12288 Sep 24 08:44  .fod.txt.swo
-rw-------  1 codebind codebind 12288 Sep 24 08:37  .fod.txt.swp
-rw-rw-r--  1 codebind codebind   180 Oct  8 08:25  foo.txt
-rw-------  1 codebind codebind 12288 Sep 24 09:50  .foo.txt.swn
-rw-------  1 codebind codebind 12288 Sep 24 09:41  .foo.txt.swo
-rw-------  1 codebind codebind 12288 Sep 24 08:53  .foo.txt.swp
drwx------  3 codebind codebind  4096 Sep 24 10:22  [01;34m.gnupg[0m
drwxrwxr-x  3 codebind codebind  4096 Oct  3 17:19  [01;34mlab3[0m
drwxrwxr-x  2 codebind codebind  4096 Oct  9 08:41  [01;34mlab4[0m
drwxr-xr-x  3 codebind codebind  4096 Sep 18 16:46  [01;34m.local[0m
-rw-------  1 codebind codebind 12288 Sep 24 10:00  .mo.txt.swp
drwx------  5 codebind codebind  4096 Sep 20 18:58  [01;34m.mozilla[0m
-rw-------  1 codebind codebind 12288 Sep 24 10:04  .m.txt.swo
-rw-------  1 codebind codebind 12288 Sep 24 09:35  .m.txt.swp
drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mMusic[0m
-rw-rw-r--  1 codebind codebind   116 Sep 25 16:21  myfirst
-rw-rw-r--  1 codebind codebind    52 Sep 30 22:34  myyfirst
drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mPictures[0m
-rw-r--r--  1 codebind codebind   807 Sep 18 15:49  .profile
drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mPublic[0m
-rw-------  1 codebind codebind 12288 Sep 24 09:44  .re.swp
-rw-rw-r--  1 codebind codebind   410 Sep 25 19:11  s
drwx------  2 codebind codebind  4096 Sep 24 10:22  [01;34m.ssh[0m
----r--r--  1 codebind codebind     0 Oct 10 16:18  .sudo_as_admin_successful
-rw-------  1 codebind codebind 12288 Sep 25 14:30  .swn
-rw-------  1 codebind codebind 12288 Sep 24 08:56  .swo
-rw-------  1 codebind codebind 12288 Sep 24 08:29  .swp
drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mTemplates[0m
-rw-rw-r--  1 codebind codebind   128 Sep 25 16:46  testmacros.txt
-rw-rw-r--  1 codebind codebind 18225 Oct  4 18:26 'Untitled 1.odt'
-rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-clipboard.pid
-rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-display-svga-x11.pid
-rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-draganddrop.pid
-rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-seamless.pid
drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mVideos[0m
-rw-------  1 codebind codebind 12288 Sep 24 10:12  .v.txt.swp
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ [K]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ [K]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 1ls -aless .bashrc[2Ppashbashrc[K[K[K[K[K[K[K[K[K[K[K[Kgedit /etc/bash
^[[A^[[A        
bath

j n 


path




]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ bath

Command 'bath' not found, did you mean:

  command 'bash' from deb bash (5.0-6ubuntu1.1)
  command 'bat' from deb bacula-console-qt (9.4.2-2ubuntu5)
  command 'bats' from deb bats (1.1.0+git104-g1c83a1b-1)
  command 'batch' from deb at (3.1.23-1ubuntu1)

Try: sudo apt install <deb name>

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ path

Command 'path' not found, did you mean:

  command 'path6' from deb ipv6toolkit (2.0-1)
  command 'mpath' from deb libmodule-path-perl (0.19-1)
  command 'xpath' from deb libxml-xpath-perl (1.44-1)
  command 'patch' from deb patch (2.7.6-6)
  command 'pat' from deb dist (1:3.5-236-0.1build1)

Try: sudo apt install <deb name>

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ 
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ pathbathgedit /etc/bash[K[K[K[Kprofile

** (gedit:7075): [1;33mWARNING[0m **: [34m21:17:04.034[0m: Saving metadata failed: Unable to set metadata key
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ gedit /etc/profile[C[1Pprofile[1Pprofile[1Pprofile[1Pprofile[1Pprofile[1Pprofile[1Pprofiletprofile profile.profile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ [K]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ gedit .profile/etc/profilepath[Kbathgedit /etc/bash[9Pls -aless .bash[4Ps -aless .bashrc[2Ppashbash_rc[3Ppashbashrc[K[4Ps -algedit /etc/bashbath[Kpathgedit /etc/profile[4P.profile[Kgedit .profile[KLS [K[K[Kls -l .pri[Kofilr[Ke
-rw-r--r-- 1 codebind codebind 807 Sep 18 15:49 .profile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ p[KPATH=$PATH:/ETC[K[K[Ketc
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/etc
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ ECHO [K[K[K[K[Kecho PWD
PWD
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo PWD$PWD
/home/codebind
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $PWD[Kecho $PWD /[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[KGED[K[K[Kgr[Kedit /etc/PWD$PWD
^[[A^[[B]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ gedit /etc/$PWD[Kgedit /etc/$PWD[K[K[K[K[K[C[1P /etc[1P /etc[1P /etc[1P /etc[1P /etc$ /etcp /etcw /etcd /etc[1P /etc[1P /etc[1P /etcP /etcW /etcD /etc
bash: /home/codebind: Is a directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ $PWD /etc
bash: /home/codebind: Is a directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ C[Kecho PSI[Kl[K1$PS1
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ SAVEPS1=PS1[C$PS1
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ PS1=""H"A"[1P"[1P"a"[1P"h"e"l"l"o">">"[1P"
hello>psq[K[K[KPS1~[K\[K=""$"P"W"D">"
/home/codebind>PS1=SAVEFI[K[KPS1
SAVEPS1SA[K[K=SA[KP1
=SP1: command not found
SAVEPS1PS1=#SAVW[KEPS1
#SAVEPS1PS1=#SAVEPS1[1PSAVEPS1$SAVEPS1
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ SET[K[K[Kset |mor[K[K[K moe[Kre
BASH=/usr/bin/bash
BASHOPTS=checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquo
te:force_fignore:globasciiranges:histappend:interactive_comments:progcomp:prom
ptvars:sourcepath
BASH_ALIASES=()
BASH_ARGC=([0]="0")
BASH_ARGV=()
BASH_CMDS=()
BASH_COMPLETION_VERSINFO=([0]="2" [1]="10")
BASH_LINENO=()
BASH_SOURCE=()
BASH_VERSINFO=([0]="5" [1]="0" [2]="17" [3]="1" [4]="release" [5]="x86_64-pc-l
inux-gnu")
BASH_VERSION='5.0.17(1)-release'
CLUTTER_IM_MODULE=ibus
COLORTERM=truecolor
COLUMNS=78
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
DESKTOP_SESSION=ubuntu
DIRSTACK=()
DISPLAY=:0
EUID=1000
GDMSESSION=ubuntu
[7m--More--[27mGJS_DEBUG_OUTPUT=stderr
GJS_DEBUG_TOPICS='JS ERROR;JS LOG'
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
GNOME_SHELL_SESSION_MODE=ubuntu
GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/83571bde_dbca_42c3_b242_8ec41
d93ac79
GNOME_TERMINAL_SERVICE=:1.258
GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1
GROUPS=()
GTK_IM_MODULE=ibus
GTK_MODULES=gail:atk-bridge
HISTCONTROL=ignoreboth
HISTFILE=/home/codebind/.bash_history
HISTFILESIZE=2000
HISTSIZE=1000
HOME=/home/codebind
HOSTNAME=codebind
HOSTTYPE=x86_64
IFS=$' \t\n'
IM_CONFIG_PHASE=1
INVOCATION_ID=bca2d2b8d9a74f789a643d5a5ed2f22c
JOURNAL_STREAM=9:31296
LANG=en_US.UTF-8
[7m--More--[27mLESSCLOSE='/usr/bin/lesspipe %s %s'
LESSOPEN='| /usr/bin/lesspipe %s'
LINES=24
LOGNAME=codebind
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01
:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st
=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.
lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=0
1;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=
01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*
.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=0
1;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*
.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01
;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;3
5:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xp
m=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01
;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*
.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=
01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:
*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01
;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.
au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=0
0;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*
[7m--More--[27m.spx=00;36:*.xspf=00;36:'
MACHTYPE=x86_64-pc-linux-gnu
MAILCHECK=60
MANAGERPID=1360
OPTERR=1
OPTIND=1
OSTYPE=linux-gnu
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/
usr/local/games:/snap/bin:/etc
PIPESTATUS=([0]="0")
PPID=6865
PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\
h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
PS2='> '
PS4='+ '
PWD=/home/codebind
QT4_IM_MODULE=ibus
QT_ACCESSIBILITY=1
QT_IM_MODULE=ibus
SAVEPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/gam
es:/usr/local/games:/snap/bin
SAVEPS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]
\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
[7m--More--[27mSESSION_MANAGER=local/codebind:@/tmp/.ICE-unix/1674,unix/codebind:/tmp/.ICE-un
ix/1674
SHELL=/bin/bash
SHELLOPTS=braceexpand:emacs:hashall:histexpand:history:interactive-comments:mo
nitor
SHLVL=2
SSH_AGENT_PID=1570
SSH_AUTH_SOCK=/run/user/1000/keyring/ssh
TERM=xterm-256color
UID=1000
USER=codebind
USERNAME=codebind
VTE_VERSION=6003
WINDOWPATH=2
XAUTHORITY=/run/user/1000/gdm/Xauthority
XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
XDG_CURRENT_DESKTOP=ubuntu:GNOME
XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/d
esktop
XDG_MENU_PREFIX=gnome-
XDG_RUNTIME_DIR=/run/user/1000
XDG_SESSION_CLASS=user
XDG_SESSION_DESKTOP=ubuntu
[7m--More--[27mXDG_SESSION_TYPE=x11
XMODIFIERS=@im=ibus
_=
_backup_glob='@(#*#|*@(~|.@(bak|orig|rej|swp|dpkg*|rpm@(orig|new|save))))'
_xspecs=([lokalize]="!*.po" [acroread]="!*.[pf]df" [lbzcat]="!*.?(t)bz?(2)" [m
pg321]="!*.mp3" [bzcat]="!*.?(t)bz?(2)" [oocalc]="!*.@(sxc|stc|xls?([bmx])|xlw
|xlt?([mx])|[ct]sv|?(f)ods|ots)" [tex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [
unlzma]="!*.@(tlz|lzma)" [sxemacs]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(
e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [aviplay]="!*.@(avi|asf|wmv)" [lbunzip2]="
!*.?(t)bz?(2)" [dragon]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|
VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt
|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG
[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|
srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(
crdownload|part))" [freeamp]="!*.@(mp3|og[ag]|pls|m3u)" [rgvim]="*.@([ao]|so|s
o.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [ooimpress]="
!*.@(sxi|sti|pps?(x)|ppt?([mx])|pot?([mx])|?(f)odp|otp)" [gqmpeg]="!*.@(mp3|og
[ag]|pls|m3u)" [texi2html]="!*.texi*" [hbpp]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])"
 [lowriter]="!*.@(sxw|stw|sxg|sgl|doc?([mx])|dot?([mx])|rtf|txt|htm|html|?(f)o
dt|ott|odm|pdf)" [qiv]="!*.@(gif|jp?(e)g|tif?(f)|png|p[bgp]m|bmp|x[bp]m|rle|rg
b|pcx|fits|pm|svg)" [xanim]="!*.@(mpg|mpeg|avi|mov|qt)" [ps2pdfwr]="!*.@(?(e)p
s|pdf)" [harbour]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])" [jadetex]="!*.@(?(la)tex|t
exi|dtx|ins|ltx|dbj)" [lodraw]="!*.@(sxd|std|sda|sdd|?(f)odg|otg)" [dvitype]="
[7m--More--[27m!*.dvi" [lobase]="!*.odb" [rpm2cpio]="!*.[rs]pm" [xine]="!*@(.@(mp?(e)g|MP?(E)
G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|f
xm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]
|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wa
v|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+
([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [lualatex]="!*.@(?(la)tex|texi|dtx|
ins|ltx|dbj)" [localc]="!*.@(sxc|stc|xls?([bmx])|xlw|xlt?([mx])|[ct]sv|?(f)ods
|ots)" [hbrun]="!*.[Hh][Rr][Bb]" [amaya]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL])
)" [gv]="!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))" [unpigz]="!*.@
(Z|[gGdz]z|t[ag]z)" [mozilla]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [epdfvie
w]="!*.pdf" [dvips]="!*.dvi" [pdfunite]="!*.pdf" [ps2pdf14]="!*.@(?(e)ps|pdf)"
 [kid3]="!*.@(mp[234c]|og[ag]|@(fl|a)ac|m4[abp]|spx|tta|w?(a)v|wma|aif?(f)|asf
|ape)" [vi]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf
|ogg|class)" [ps2pdf]="!*.@(?(e)ps|pdf)" [gpdf]="!*.[pf]df" [lilypond]="!*.ly"
 [texi2dvi]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [modplug123]="!*.@(669|abc|a
m[fs]|d[bs]m|dmf|far|it|mdl|m[eo]d|mid?(i)|mt[2m]|oct|okt?(a)|p[st]m|s[3t]m|ul
t|umx|wav|xm)" [znew]="*.Z" [ps2pdf13]="!*.@(?(e)ps|pdf)" [ps2pdf12]="!*.@(?(e
)ps|pdf)" [kwrite]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|
avi|asf|ogg|class)" [latex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [kate]="*.@(
[ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [pbz
cat]="!*.?(t)bz?(2)" [poedit]="!*.po" [view]="*.@([ao]|so|so.!(conf|*/*)|[rs]p
m|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [kid3-qt]="!*.@(mp[234c]|og[ag]|
@(fl|a)ac|m4[abp]|spx|tta|w?(a)v|wma|aif?(f)|asf|ape)" [luatex]="!*.@(?(la)tex
[7m--More--[27m|texi|dtx|ins|ltx|dbj)" [bunzip2]="!*.?(t)bz?(2)" [dvipdfm]="!*.dvi" [kbabel]=
"!*.po" [ly2dvi]="!*.ly" [oodraw]="!*.@(sxd|std|sda|sdd|?(f)odg|otg)" [bzme]="
!*.@(zip|z|gz|tgz)" [rgview]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp
3|mp?(e)g|avi|asf|ogg|class)" [pdftex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [
xemacs]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg
|class)" [zathura]="!*.@(cb[rz7t]|djv?(u)|?(e)ps|pdf)" [unxz]="!*.@(?(t)xz|tlz
|lzma)" [rvim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|
asf|ogg|class)" [madplay]="!*.mp3" [xetex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj
)" [gvim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|o
gg|class)" [kaffeine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VO
B|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|Q
T|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[A
GMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|sr
t|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(cr
download|part))" [dviselect]="!*.dvi" [kpdf]="!*.@(?(e)ps|pdf)" [bibtex]="!*.a
ux" [realplay]="!*.@(rm?(j)|ra?(m)|smi?(l))" [mpg123]="!*.mp3" [netscape]="!*.
@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [lzegrep]="!*.@(tlz|lzma)" [gview]="*.@([a
o]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [kdvi]
="!*.@(dvi|DVI)?(.@(gz|Z|bz2))" [xv]="!*.@(gif|jp?(e)g?(2)|j2[ck]|jp[2f]|tif?(
f)|png|p[bgp]m|bmp|x[bp]m|rle|rgb|pcx|fits|pm|?(e)ps)" [lzfgrep]="!*.@(tlz|lzm
a)" [playmidi]="!*.@(mid?(i)|cmf)" [lzless]="!*.@(tlz|lzma)" [elinks]="!*.@(?(
[xX]|[sS])[hH][tT][mM]?([lL]))" [timidity]="!*.@(mid?(i)|rmi|rcp|[gr]36|g18|mo
d|xm|it|x3m|s[3t]m|kar)" [xdvi]="!*.@(dvi|DVI)?(.@(gz|Z|bz2))" [xfig]="!*.fig"
[7m--More--[27m [xpdf]="!*.@(pdf|fdf)?(.@(gz|GZ|bz2|BZ2|Z))" [lomath]="!*.@(sxm|smf|mml|odf)"
 [lzcat]="!*.@(tlz|lzma)" [compress]="*.Z" [pdfjadetex]="!*.@(?(la)tex|texi|dt
x|ins|ltx|dbj)" [kghostview]="!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2
|.Z))" [zcat]="!*.@(Z|[gGd]z|t[ag]z)" [pbunzip2]="!*.?(t)bz?(2)" [oobase]="!*.
odb" [cdiff]="!*.@(dif?(f)|?(d)patch)?(.@([gx]z|bz2|lzma))" [gtranslator]="!*.
po" [lynx]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [emacs]="*.@([ao]|so|so.!(c
onf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [zipinfo]="!*.@(zi
p|[egjswx]ar|exe|pk3|wsz|zargo|xpi|s[tx][cdiw]|sx[gm]|o[dt][tspgfc]|od[bm]|oxt
|epub|apk|aab|ipa|do[ct][xm]|p[op]t[mx]|xl[st][xm]|pyz|whl)" [xelatex]="!*.@(?
(la)tex|texi|dtx|ins|ltx|dbj)" [uncompress]="!*.Z" [xzcat]="!*.@(?(t)xz|tlz|lz
ma)" [unzip]="!*.@(zip|[egjswx]ar|exe|pk3|wsz|zargo|xpi|s[tx][cdiw]|sx[gm]|o[d
t][tspgfc]|od[bm]|oxt|epub|apk|aab|ipa|do[ct][xm]|p[op]t[mx]|xl[st][xm]|pyz|wh
l)" [rview]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf
|ogg|class)" [ogg123]="!*.@(og[ag]|m3u|flac|spx)" [lrunzip]="!*.lrz" [lzgrep]=
"!*.@(tlz|lzma)" [slitex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [vim]="*.@([ao
]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [ggv]="
!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))" [ee]="!*.@(gif|jp?(e)g|
miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx)" [oomath]="!*.@(sxm|smf|m
ml|odf)" [aaxine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bi
n|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|we
b[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX
]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[
eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|par
[7m--More--[27mt))" [dvipdfmx]="!*.dvi" [advi]="!*.dvi" [gunzip]="!*.@(Z|[gGd]z|t[ag]z)" [mak
einfo]="!*.texi*" [gharbour]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])" [okular]="!*.@(
okular|@(?(e|x)ps|?(E|X)PS|[pf]df|[PF]DF|dvi|DVI|cb[rz]|CB[RZ]|djv?(u)|DJV?(U)
|dvi|DVI|gif|jp?(e)g|miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx|GIF|J
P?(E)G|MIFF|TIF?(F)|PN[GM]|P[BGP]M|BMP|XPM|ICO|XWD|TGA|PCX|epub|EPUB|odt|ODT|f
b?(2)|FB?(2)|mobi|MOBI|g3|G3|chm|CHM)?(.?(gz|GZ|bz2|BZ2|xz|XZ)))" [galeon]="!*
.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [pdflatex]="!*.@(?(la)tex|texi|dtx|ins|lt
x|dbj)" [lzmore]="!*.@(tlz|lzma)" [portecle]="!@(*.@(ks|jks|jceks|p12|pfx|bks|
ubr|gkr|cer|crt|cert|p7b|pkipath|pem|p10|csr|crl)|cacerts)" [oowriter]="!*.@(s
xw|stw|sxg|sgl|doc?([mx])|dot?([mx])|rtf|txt|htm|html|?(f)odt|ott|odm|pdf)" [l
oimpress]="!*.@(sxi|sti|pps?(x)|ppt?([mx])|pot?([mx])|?(f)odp|otp)" [epiphany]
="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [modplugplay]="!*.@(669|abc|am[fs]|d[
bs]m|dmf|far|it|mdl|m[eo]d|mid?(i)|mt[2m]|oct|okt?(a)|p[st]m|s[3t]m|ult|umx|wa
v|xm)" [dvipdf]="!*.dvi" [dillo]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [fbxi
ne]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIV
X|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|
mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|
m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[
3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" )
__expand_tilde_by_ref () 
{ 
    if [[ ${!1} == \~* ]]; then
        eval $1=$(printf ~%q "${!1#\~}");
[7m--More--[27m    fi[K
}
__get_cword_at_cursor_by_ref () 
{ 
    local cword words=();
    __reassemble_comp_words_by_ref "$1" words cword;
    local i cur index=$COMP_POINT lead=${COMP_LINE:0:$COMP_POINT};
    if [[ $index -gt 0 && ( -n $lead && -n ${lead//[[:space:]]} ) ]]; then
        cur=$COMP_LINE;
        for ((i = 0; i <= cword; ++i ))
        do
            while [[ ${#cur} -ge ${#words[i]} && "${cur:0:${#words[i]}}" != "$
{words[i]}" ]]; do
                cur="${cur:1}";
                [[ $index -gt 0 ]] && ((index--));
            done;
            if [[ $i -lt $cword ]]; then
                local old_size=${#cur};
                cur="${cur#"${words[i]}"}";
                local new_size=${#cur};
                (( index -= old_size - new_size ));
            fi;
        done;
[7m--More--[27m        [[ -n $cur && ! -n ${cur//[[:space:]]} ]] && cur=;
        [[ $index -lt 0 ]] && index=0;
    fi;
    local "$2" "$3" "$4" && _upvars -a${#words[@]} $2 "${words[@]}" -v $3 "$cw
ord" -v $4 "${cur:0:$index}"
}
__load_completion () 
{ 
    local -a dirs=(${BASH_COMPLETION_USER_DIR:-${XDG_DATA_HOME:-$HOME/.local/s
hare}/bash-completion}/completions);
    local OIFS=$IFS IFS=: dir cmd="${1##*/}" compfile;
    [[ -n $cmd ]] || return 1;
    for dir in ${XDG_DATA_DIRS:-/usr/local/share:/usr/share};
    do
        dirs+=($dir/bash-completion/completions);
    done;
    IFS=$OIFS;
    if [[ $BASH_SOURCE == */* ]]; then
        dirs+=("${BASH_SOURCE%/*}/completions");
    else
        dirs+=(./completions);
    fi;
    for dir in "${dirs[@]}";
[7m--More--[27m    do[K
        [[ -d "$dir" ]] || continue;
        for compfile in "$cmd" "$cmd.bash" "_$cmd";
        do
            compfile="$dir/$compfile";
            [[ -f "$compfile" ]] && . "$compfile" &> /dev/null && return 0;
        done;
    done;
    [[ -n "${_xspecs[$cmd]}" ]] && complete -F _filedir_xspec "$cmd" && return
 0;
    return 1
}
__ltrim_colon_completions () 
{ 
    if [[ "$1" == *:* && "$COMP_WORDBREAKS" == *:* ]]; then
        local colon_word=${1%"${1##*:}"};
        local i=${#COMPREPLY[*]};
        while [[ $((--i)) -ge 0 ]]; do
            COMPREPLY[$i]=${COMPREPLY[$i]#"$colon_word"};
        done;
    fi
}
__parse_options () 
[7m--More--[27m{ [K
    local option option2 i IFS=' 	
,/|';
    option=;
    local -a array=($1);
    for i in "${array[@]}";
    do
        case "$i" in 
            ---*)
                break
            ;;
            --?*)
                option=$i;
                break
            ;;
            -?*)
                [[ -n $option ]] || option=$i
            ;;
            *)
                break
            ;;
        esac;
    done;
[7m--More--[27m    [[ -n $option ]] || return 0;
    IFS=' 	
';
    if [[ $option =~ (\[((no|dont)-?)\]). ]]; then
        option2=${option/"${BASH_REMATCH[1]}"/};
        option2=${option2%%[<{().[]*};
        printf '%s\n' "${option2/=*/=}";
        option=${option/"${BASH_REMATCH[1]}"/"${BASH_REMATCH[2]}"};
    fi;
    option=${option%%[<{().[]*};
    printf '%s\n' "${option/=*/=}"
}
__reassemble_comp_words_by_ref () 
{ 
    local exclude i j line ref;
    if [[ -n $1 ]]; then
        exclude="${1//[^$COMP_WORDBREAKS]}";
    fi;
    printf -v "$3" %s "$COMP_CWORD";
    if [[ -n $exclude ]]; then
        line=$COMP_LINE;
        for ((i=0, j=0; i < ${#COMP_WORDS[@]}; i++, j++))
        do
[7m--More--[27m            while [[ $i -gt 0 && ${COMP_WORDS[$i]} == +([$exclude]) ]]; do
                [[ $line != [[:blank:]]* ]] && (( j >= 2 )) && ((j--));
                ref="$2[$j]";
                printf -v "$ref" %s "${!ref}${COMP_WORDS[i]}";
                [[ $i == $COMP_CWORD ]] && printf -v "$3" %s "$j";
                line=${line#*"${COMP_WORDS[$i]}"};
                [[ $line == [[:blank:]]* ]] && ((j++));
                (( $i < ${#COMP_WORDS[@]} - 1)) && ((i++)) || break 2;
            done;
            ref="$2[$j]";
            printf -v "$ref" %s "${!ref}${COMP_WORDS[i]}";
            line=${line#*"${COMP_WORDS[i]}"};
            [[ $i == $COMP_CWORD ]] && printf -v "$3" %s "$j";
        done;
        [[ $i == $COMP_CWORD ]] && printf -v "$3" %s "$j";
    else
        for i in "${!COMP_WORDS[@]}";
        do
            printf -v "$2[i]" %s "${COMP_WORDS[i]}";
        done;
    fi
}
_allowed_groups () 
[7m--More--[27m{ [K
    if _complete_as_root; then
        local IFS='
';
        COMPREPLY=($(compgen -g -- "$1"));
    else
        local IFS='
 ';
        COMPREPLY=($(compgen -W             "$(id -Gn 2>/dev/null || groups 2>
/dev/null)" -- "$1"));
    fi
}
_allowed_users () 
{ 
    if _complete_as_root; then
        local IFS='
';
        COMPREPLY=($(compgen -u -- "${1:-$cur}"));
    else
        local IFS='
 ';
        COMPREPLY=($(compgen -W             "$(id -un 2>/dev/null || whoami 2>
/dev/null)" -- "${1:-$cur}"));
[7m--More--[27m    fi[K
}
_apport-bug () 
{ 
    local cur dashoptions prev param;
    COMPREPLY=();
    cur=`_get_cword`;
    prev=${COMP_WORDS[COMP_CWORD-1]};
    dashoptions='-h --help --save -v --version --tag -w --window';
    case "$prev" in 
        ubuntu-bug | apport-bug)
            case "$cur" in 
                -*)
                    COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
                ;;
                *)
                    _apport_parameterless
                ;;
            esac
        ;;
        --save)
            COMPREPLY=($( compgen -o default -G "$cur*" ))
        ;;
[7m--More--[27m        -w | --window)
            dashoptions="--save --tag";
            COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
        ;;
        -h | --help | -v | --version | --tag)
            return 0
        ;;
        *)
            dashoptions="--tag";
            if ! [[ "${COMP_WORDS[*]}" =~ .*--save.* ]]; then
                dashoptions="--save $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--window.* || "${COMP_WORDS[*]}" =
~ .*\ -w\ .* ]]; then
                dashoptions="-w --window $dashoptions";
            fi;
            case "$cur" in 
                -*)
                    COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
                ;;
                *)
                    _apport_parameterless
                ;;
[7m--More--[27m            esac
        ;;
    esac
}
_apport-cli () 
{ 
    local cur dashoptions prev param;
    COMPREPLY=();
    cur=`_get_cword`;
    prev=${COMP_WORDS[COMP_CWORD-1]};
    dashoptions='-h --help -f --file-bug -u --update-bug -s --symptom \
                 -c --crash-file --save -v --version --tag -w --window';
    case "$prev" in 
        apport-cli)
            case "$cur" in 
                -*)
                    COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
                ;;
                *)
                    _apport_parameterless
                ;;
            esac
        ;;
[7m--More--[27m        -f | --file-bug)
            param="-P --pid -p --package -s --symptom";
            COMPREPLY=($( compgen -W "$param $(_apport_symptoms)" -- $cur))
        ;;
        -s | --symptom)
            COMPREPLY=($( compgen -W "$(_apport_symptoms)" -- $cur))
        ;;
        --save)
            COMPREPLY=($( compgen -o default -G "$cur*" ))
        ;;
        -c | --crash-file)
            COMPREPLY=($( compgen -G "${cur}*.apport"
                       compgen -G "${cur}*.crash" ))
        ;;
        -w | --window)
            dashoptions="--save --tag";
            COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
        ;;
        -h | --help | -v | --version | --tag)
            return 0
        ;;
        *)
            dashoptions='--tag';
[7m--More--[27m            if ! [[ "${COMP_WORDS[*]}" =~ .*--save.* ]]; then
                dashoptions="--save $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--window.* || "${COMP_WORDS[*]}" =
~ .*\ -w\ .* ]]; then
                dashoptions="-w --window $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--symptom.* || "${COMP_WORDS[*]}" 
=~ .*\ -s\ .* ]]; then
                dashoptions="-s --symptom $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--update.* || "${COMP_WORDS[*]}" =
~ .*\ -u\ .* ]]; then
                dashoptions="-u --update $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--file-bug.* || "${COMP_WORDS[*]}"
 =~ .*\ -f\ .* ]]; then
                dashoptions="-f --file-bug $dashoptions";
            fi;
            if ! [[ "${COMP_WORDS[*]}" =~ .*--crash-file.* || "${COMP_WORDS[*]
}" =~ .*\ -c\ .* ]]; then
                dashoptions="-c --crash-file $dashoptions";
            fi;
[7m--More--[27m            case "$cur" in 
                -*)
                    COMPREPLY=($( compgen -W "$dashoptions" -- $cur ))
                ;;
                *)
                    _apport_parameterless
                ;;
            esac
        ;;
    esac
}
_apport-collect () 
{ 
    local cur prev;
    COMPREPLY=();
    cur=`_get_cword`;
    prev=${COMP_WORDS[COMP_CWORD-1]};
    case "$prev" in 
        apport-collect)
            COMPREPLY=($( compgen -W "-p --package --tag" -- $cur))
        ;;
        -p | --package)
            COMPREPLY=($( apt-cache pkgnames $cur 2> /dev/null ))
[7m--More--[27m        ;;
        --tag)
            return 0
        ;;
        *)
            if [[ "${COMP_WORDS[*]}" =~ .*\ -p.* || "${COMP_WORDS[*]}" =~ .*--
package.* ]]; then
                COMPREPLY=($( compgen -W "--tag" -- $cur));
            else
                COMPREPLY=($( compgen -W "-p --package --tag" -- $cur));
            fi
        ;;
    esac
}
_apport-unpack () 
{ 
    local cur prev;
    COMPREPLY=();
    cur=`_get_cword`;
    prev=${COMP_WORDS[COMP_CWORD-1]};
    case "$prev" in 
        apport-unpack)
            COMPREPLY=($( compgen -G "${cur}*.apport"
[7m--More--[27m                       compgen -G "${cur}*.crash" ))
        ;;
    esac
}
_apport_parameterless () 
{ 
    local param;
    param="$dashoptions            $( apt-cache pkgnames $cur 2> /dev/null )  
          $( command ps axo pid | sed 1d )            $( _apport_symptoms )   
         $( compgen -G "${cur}*" )";
    COMPREPLY=($( compgen -W "$param" -- $cur))
}
_apport_symptoms () 
{ 
    local syms;
    if [ -r /usr/share/apport/symptoms ]; then
        for FILE in $(ls /usr/share/apport/symptoms);
        do
            if [[ ! "$FILE" =~ ^_.* && -n $(egrep "^def run\s*\(.*\):" /usr/sh
are/apport/symptoms/$FILE) ]]; then
                syms="$syms ${FILE%.py}";
            fi;
        done;
[7m--More--[27m    fi;[K
    echo $syms
}
_available_interfaces () 
{ 
    local PATH=$PATH:/sbin;
    COMPREPLY=($({
        if [[ ${1:-} == -w ]]; then
            iwconfig
        elif [[ ${1:-} == -a ]]; then
            ifconfig || ip link show up
        else
            ifconfig -a || ip link show
        fi
    } 2>/dev/null | awk         '/^[^ \t]/ { if ($1 ~ /^[0-9]+:/) { print $2 }
 else { print $1 } }'));
    COMPREPLY=($(compgen -W '${COMPREPLY[@]/%[[:punct:]]/}' -- "$cur"))
}
_cd () 
{ 
    local cur prev words cword;
    _init_completion || return;
    local IFS='
[7m--More--[27m' i j k;
    compopt -o filenames;
    if [[ -z "${CDPATH:-}" || "$cur" == ?(.)?(.)/* ]]; then
        _filedir -d;
        return;
    fi;
    local -r mark_dirs=$(_rl_enabled mark-directories && echo y);
    local -r mark_symdirs=$(_rl_enabled mark-symlinked-directories && echo y);
    for i in ${CDPATH//:/'
'};
    do
        k="${#COMPREPLY[@]}";
        for j in $(compgen -d -- $i/$cur);
        do
            if [[ ( -n $mark_symdirs && -h $j || -n $mark_dirs && ! -h $j ) &&
 ! -d ${j#$i/} ]]; then
                j+="/";
            fi;
            COMPREPLY[k++]=${j#$i/};
        done;
    done;
    _filedir -d;
    if [[ ${#COMPREPLY[@]} -eq 1 ]]; then
[7m--More--[27m        i=${COMPREPLY[0]};
        if [[ "$i" == "$cur" && $i != "*/" ]]; then
            COMPREPLY[0]="${i}/";
        fi;
    fi;
    return
}
_cd_devices () 
{ 
    COMPREPLY+=($(compgen -f -d -X "!*/?([amrs])cd*" -- "${cur:-/dev/}"))
}
_command () 
{ 
    local offset i;
    offset=1;
    for ((i=1; i <= COMP_CWORD; i++ ))
    do
        if [[ "${COMP_WORDS[i]}" != -* ]]; then
            offset=$i;
            break;
        fi;
    done;
    _command_offset $offset
[7m--More--[27m}[K
_command_offset () 
{ 
    local word_offset=$1 i j;
    for ((i=0; i < $word_offset; i++ ))
    do
        for ((j=0; j <= ${#COMP_LINE}; j++ ))
        do
            [[ "$COMP_LINE" == "${COMP_WORDS[i]}"* ]] && break;
            COMP_LINE=${COMP_LINE:1};
            ((COMP_POINT--));
        done;
        COMP_LINE=${COMP_LINE#"${COMP_WORDS[i]}"};
        ((COMP_POINT-=${#COMP_WORDS[i]}));
    done;
    for ((i=0; i <= COMP_CWORD - $word_offset; i++ ))
    do
        COMP_WORDS[i]=${COMP_WORDS[i+$word_offset]};
    done;
    for ((i; i <= COMP_CWORD; i++ ))
    do
        unset 'COMP_WORDS[i]';
    done;
[7m--More--[27m    ((COMP_CWORD -= $word_offset));
    COMPREPLY=();
    local cur;
    _get_comp_words_by_ref cur;
    if [[ $COMP_CWORD -eq 0 ]]; then
        local IFS='
';
        compopt -o filenames;
        COMPREPLY=($(compgen -d -c -- "$cur"));
    else
        local cmd=${COMP_WORDS[0]} compcmd=${COMP_WORDS[0]};
        local cspec=$(complete -p $cmd 2>/dev/null);
        if [[ ! -n $cspec && $cmd == */* ]]; then
            cspec=$(complete -p ${cmd##*/} 2>/dev/null);
            [[ -n $cspec ]] && compcmd=${cmd##*/};
        fi;
        if [[ ! -n $cspec ]]; then
            compcmd=${cmd##*/};
            _completion_loader $compcmd;
            cspec=$(complete -p $compcmd 2>/dev/null);
        fi;
        if [[ -n $cspec ]]; then
            if [[ ${cspec#* -F } != $cspec ]]; then
[7m--More--[27m                local func=${cspec#*-F };
                func=${func%% *};
                if [[ ${#COMP_WORDS[@]} -ge 2 ]]; then
                    $func $cmd "${COMP_WORDS[${#COMP_WORDS[@]}-1]}" "${COMP_WO
RDS[${#COMP_WORDS[@]}-2]}";
                else
                    $func $cmd "${COMP_WORDS[${#COMP_WORDS[@]}-1]}";
                fi;
                local opt;
                while [[ $cspec == *" -o "* ]]; do
                    cspec=${cspec#*-o };
                    opt=${cspec%% *};
                    compopt -o $opt;
                    cspec=${cspec#$opt};
                done;
            else
                cspec=${cspec#complete};
                cspec=${cspec%%$compcmd};
                COMPREPLY=($(eval compgen "$cspec" -- '$cur'));
            fi;
        else
            if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
                _minimal;
[7m--More--[27m            fi;
        fi;
    fi
}
_complete_as_root () 
{ 
    [[ $EUID -eq 0 || -n ${root_command:-} ]]
}
_completion_loader () 
{ 
    local cmd="${1:-_EmptycmD_}";
    __load_completion "$cmd" && return 124;
    complete -F _minimal -- "$cmd" && return 124
}
_configured_interfaces () 
{ 
    if [[ -f /etc/debian_version ]]; then
        COMPREPLY=($(compgen -W "$(command sed -ne 's|^iface \([^ ]\{1,\}\).*$
|\1|p'            /etc/network/interfaces /etc/network/interfaces.d/* 2>/dev/n
ull)"             -- "$cur"));
    else
        if [[ -f /etc/SuSE-release ]]; then
            COMPREPLY=($(compgen -W "$(printf '%s\n'             /etc/sysconfi
[7m--More--[27mg/network/ifcfg-* |             command sed -ne 's|.*ifcfg-\([^*].*\)$|\1|p')"
 -- "$cur"));
        else
            if [[ -f /etc/pld-release ]]; then
                COMPREPLY=($(compgen -W "$(command ls -B             /etc/sysc
onfig/interfaces |             command sed -ne 's|.*ifcfg-\([^*].*\)$|\1|p')" 
-- "$cur"));
            else
                COMPREPLY=($(compgen -W "$(printf '%s\n'             /etc/sysc
onfig/network-scripts/ifcfg-* |             command sed -ne 's|.*ifcfg-\([^*].
*\)$|\1|p')" -- "$cur"));
            fi;
        fi;
    fi
}
_count_args () 
{ 
    local i cword words;
    __reassemble_comp_words_by_ref "$1" words cword;
    args=1;
    for ((i=1; i < cword; i++ ))
    do
        if [[ ${words[i]} != -* && ${words[i-1]} != $2 || ${words[i]} == $3 ]]
[7m--More--[27m; then[K
            (( args++ ));
        fi;
    done
}
_dvd_devices () 
{ 
    COMPREPLY+=($(compgen -f -d -X "!*/?(r)dvd*" -- "${cur:-/dev/}"))
}
_expand () 
{ 
    if [[ "$cur" == \~*/* ]]; then
        __expand_tilde_by_ref cur;
    else
        if [[ "$cur" == \~* ]]; then
            _tilde "$cur" || eval COMPREPLY[0]=$(printf ~%q "${COMPREPLY[0]#\~
}");
            return ${#COMPREPLY[@]};
        fi;
    fi
}
_filedir () 
{ 
[7m--More--[27m    local IFS='
';
    _tilde "$cur" || return;
    local -a toks;
    local reset;
    if [[ "$1" == -d ]]; then
        reset=$(shopt -po noglob);
        set -o noglob;
        toks=($(compgen -d -- "$cur"));
        IFS=' ';
        $reset;
        IFS='
';
    else
        local quoted;
        _quote_readline_by_ref "$cur" quoted;
        local xspec=${1:+"!*.@($1|${1^^})"} plusdirs=();
        local opts=(-f -X "$xspec");
        [[ -n $xspec ]] && plusdirs=(-o plusdirs);
        [[ -n ${COMP_FILEDIR_FALLBACK-} ]] || opts+=("${plusdirs[@]}");
        reset=$(shopt -po noglob);
        set -o noglob;
        toks+=($(compgen "${opts[@]}" -- $quoted));
[7m--More--[27m        IFS=' ';
        $reset;
        IFS='
';
        [[ -n ${COMP_FILEDIR_FALLBACK:-} && -n "$1" && ${#toks[@]} -lt 1 ]] &&
 { 
            reset=$(shopt -po noglob);
            set -o noglob;
            toks+=($(compgen -f "${plusdirs[@]}" -- $quoted));
            IFS=' ';
            $reset;
            IFS='
'
        };
    fi;
    if [[ ${#toks[@]} -ne 0 ]]; then
        compopt -o filenames 2> /dev/null;
        COMPREPLY+=("${toks[@]}");
    fi
}
_filedir_xspec () 
{ 
    local cur prev words cword;
[7m--More--[27m    _init_completion || return;
    _tilde "$cur" || return;
    local IFS='
' xspec=${_xspecs[${1##*/}]} tmp;
    local -a toks;
    toks=($(
        compgen -d -- "$(quote_readline "$cur")" | {
        while read -r tmp; do
            printf '%s\n' $tmp
        done
        }
        ));
    eval xspec="${xspec}";
    local matchop=!;
    if [[ $xspec == !* ]]; then
        xspec=${xspec#!};
        matchop=@;
    fi;
    xspec="$matchop($xspec|${xspec^^})";
    toks+=($(
        eval compgen -f -X "'!$xspec'" -- "\$(quote_readline "\$cur")" | {
        while read -r tmp; do
            [[ -n $tmp ]] && printf '%s\n' $tmp
[7m--More--[27m        done
        }
        ));
    [[ -n ${COMP_FILEDIR_FALLBACK:-} && ${#toks[@]} -lt 1 ]] && { 
        local reset=$(shopt -po noglob);
        set -o noglob;
        toks+=($(compgen -f -- "$(quote_readline "$cur")"));
        IFS=' ';
        $reset;
        IFS='
'
    };
    if [[ ${#toks[@]} -ne 0 ]]; then
        compopt -o filenames;
        COMPREPLY=("${toks[@]}");
    fi
}
_fstypes () 
{ 
    local fss;
    if [[ -e /proc/filesystems ]]; then
        fss="$(cut -d'	' -f2 /proc/filesystems)
             $(awk '! /\*/ { print $NF }' /etc/filesystems 2>/dev/null)";
[7m--More--[27m    else
        fss="$(awk '/^[ \t]*[^#]/ { print $3 }' /etc/fstab 2>/dev/null)
             $(awk '/^[ \t]*[^#]/ { print $3 }' /etc/mnttab 2>/dev/null)
             $(awk '/^[ \t]*[^#]/ { print $4 }' /etc/vfstab 2>/dev/null)
             $(awk '{ print $1 }' /etc/dfs/fstypes 2>/dev/null)
             $([[ -d /etc/fs ]] && command ls /etc/fs)";
    fi;
    [[ -n $fss ]] && COMPREPLY+=($(compgen -W "$fss" -- "$cur"))
}
_get_comp_words_by_ref () 
{ 
    local exclude flag i OPTIND=1;
    local cur cword words=();
    local upargs=() upvars=() vcur vcword vprev vwords;
    while getopts "c:i:n:p:w:" flag "$@"; do
        case $flag in 
            c)
                vcur=$OPTARG
            ;;
            i)
                vcword=$OPTARG
            ;;
            n)
[7m--More--[27m                exclude=$OPTARG
            ;;
            p)
                vprev=$OPTARG
            ;;
            w)
                vwords=$OPTARG
            ;;
        esac;
    done;
    while [[ $# -ge $OPTIND ]]; do
        case ${!OPTIND} in 
            cur)
                vcur=cur
            ;;
            prev)
                vprev=prev
            ;;
            cword)
                vcword=cword
            ;;
            words)
                vwords=words
[7m--More--[27m            ;;
            *)
                echo "bash_completion: $FUNCNAME: \`${!OPTIND}':" "unknown arg
ument" 1>&2;
                return 1
            ;;
        esac;
        (( OPTIND += 1 ));
    done;
    __get_cword_at_cursor_by_ref "$exclude" words cword cur;
    [[ -n $vcur ]] && { 
        upvars+=("$vcur");
        upargs+=(-v $vcur "$cur")
    };
    [[ -n $vcword ]] && { 
        upvars+=("$vcword");
        upargs+=(-v $vcword "$cword")
    };
    [[ -n $vprev && $cword -ge 1 ]] && { 
        upvars+=("$vprev");
        upargs+=(-v $vprev "${words[cword - 1]}")
    };
    [[ -n $vwords ]] && { 
[7m--More--[27m        upvars+=("$vwords");
        upargs+=(-a${#words[@]} $vwords "${words[@]}")
    };
    (( ${#upvars[@]} )) && local "${upvars[@]}" && _upvars "${upargs[@]}"
}
_get_cword () 
{ 
    local LC_CTYPE=C;
    local cword words;
    __reassemble_comp_words_by_ref "$1" words cword;
    if [[ -n ${2//[^0-9]/} ]]; then
        printf "%s" "${words[cword-$2]}";
    else
        if [[ "${#words[cword]}" -eq 0 || "$COMP_POINT" == "${#COMP_LINE}" ]];
 then
            printf "%s" "${words[cword]}";
        else
            local i;
            local cur="$COMP_LINE";
            local index="$COMP_POINT";
            for ((i = 0; i <= cword; ++i ))
            do
                while [[ "${#cur}" -ge ${#words[i]} && "${cur:0:${#words[i]}}"
[7m--More--[27m != "${words[i]}" ]]; do
                    cur="${cur:1}";
                    [[ $index -gt 0 ]] && ((index--));
                done;
                if [[ "$i" -lt "$cword" ]]; then
                    local old_size="${#cur}";
                    cur="${cur#${words[i]}}";
                    local new_size="${#cur}";
                    (( index -= old_size - new_size ));
                fi;
            done;
            if [[ "${words[cword]:0:${#cur}}" != "$cur" ]]; then
                printf "%s" "${words[cword]}";
            else
                printf "%s" "${cur:0:$index}";
            fi;
        fi;
    fi
}
_get_first_arg () 
{ 
    local i;
    arg=;
[7m--More--[27m    for ((i=1; i < COMP_CWORD; i++ ))
    do
        if [[ "${COMP_WORDS[i]}" != -* ]]; then
            arg=${COMP_WORDS[i]};
            break;
        fi;
    done
}
_get_pword () 
{ 
    if [[ $COMP_CWORD -ge 1 ]]; then
        _get_cword "${@:-}" 1;
    fi
}
_gids () 
{ 
    if type getent &> /dev/null; then
        COMPREPLY=($(compgen -W '$(getent group | cut -d: -f3)' -- "$cur"));
    else
        if type perl &> /dev/null; then
            COMPREPLY=($(compgen -W '$(perl -e '"'"'while (($gid) = (getgrent)
[2]) { print $gid . "\n" }'"'"')' -- "$cur"));
        else
[7m--More--[27m            COMPREPLY=($(compgen -W '$(cut -d: -f3 /etc/group)' -- "$cur"));
        fi;
    fi
}
_have () 
{ 
    PATH=$PATH:/usr/sbin:/sbin:/usr/local/sbin type $1 &> /dev/null
}
_included_ssh_config_files () 
{ 
    [[ $# -lt 1 ]] && echo "bash_completion: $FUNCNAME: missing mandatory argu
ment CONFIG" 1>&2;
    local configfile i f;
    configfile=$1;
    local included=($(command sed -ne 's/^[[:blank:]]*[Ii][Nn][Cc][Ll][Uu][Dd]
[Ee][[:blank:]]\{1,\}\([^#%]*\)\(#.*\)\{0,1\}$/\1/p' "${configfile}"));
    for i in "${included[@]}";
    do
        if ! [[ "$i" =~ ^\~.*|^\/.* ]]; then
            if [[ "$configfile" =~ ^\/etc\/ssh.* ]]; then
                i="/etc/ssh/$i";
            else
                i="$HOME/.ssh/$i";
[7m--More--[27m            fi;
        fi;
        __expand_tilde_by_ref i;
        for f in ${i};
        do
            if [ -r $f ]; then
                config+=("$f");
                _included_ssh_config_files $f;
            fi;
        done;
    done
}
_init_completion () 
{ 
    local exclude="" flag outx errx inx OPTIND=1;
    while getopts "n:e:o:i:s" flag "$@"; do
        case $flag in 
            n)
                exclude+=$OPTARG
            ;;
            e)
                errx=$OPTARG
            ;;
[7m--More--[27m            o)
                outx=$OPTARG
            ;;
            i)
                inx=$OPTARG
            ;;
            s)
                split=false;
                exclude+==
            ;;
        esac;
    done;
    COMPREPLY=();
    local redir="@(?([0-9])<|?([0-9&])>?(>)|>&)";
    _get_comp_words_by_ref -n "$exclude<>&" cur prev words cword;
    _variables && return 1;
    if [[ $cur == $redir* || $prev == $redir ]]; then
        local xspec;
        case $cur in 
            2'>'*)
                xspec=$errx
            ;;
            *'>'*)
[7m--More--[27m                xspec=$outx
            ;;
            *'<'*)
                xspec=$inx
            ;;
            *)
                case $prev in 
                    2'>'*)
                        xspec=$errx
                    ;;
                    *'>'*)
                        xspec=$outx
                    ;;
                    *'<'*)
                        xspec=$inx
                    ;;
                esac
            ;;
        esac;
        cur="${cur##$redir}";
        _filedir $xspec;
        return 1;
    fi;
[7m--More--[27m    local i skip;
    for ((i=1; i < ${#words[@]}; 1))
    do
        if [[ ${words[i]} == $redir* ]]; then
            [[ ${words[i]} == $redir ]] && skip=2 || skip=1;
            words=("${words[@]:0:i}" "${words[@]:i+skip}");
            [[ $i -le $cword ]] && (( cword -= skip ));
        else
            (( i++ ));
        fi;
    done;
    [[ $cword -le 0 ]] && return 1;
    prev=${words[cword-1]};
    [[ -n ${split-} ]] && _split_longopt && split=true;
    return 0
}
_installed_modules () 
{ 
    COMPREPLY=($(compgen -W "$(PATH="$PATH:/sbin" lsmod |         awk '{if (NR
 != 1) print $1}')" -- "$1"))
}
_ip_addresses () 
{ 
[7m--More--[27m    local n;
    case $1 in 
        -a)
            n='6\?'
        ;;
        -6)
            n='6'
        ;;
    esac;
    local PATH=$PATH:/sbin;
    local addrs=$({ LC_ALL=C ifconfig -a || ip addr show; } 2>/dev/null |
        command sed -e 's/[[:space:]]addr:/ /' -ne             "s|.*inet${n}[[
:space:]]\{1,\}\([^[:space:]/]*\).*|\1|p");
    COMPREPLY+=($(compgen -W "$addrs" -- "$cur"))
}
_kernel_versions () 
{ 
    COMPREPLY=($(compgen -W '$(command ls /lib/modules)' -- "$cur"))
}
_known_hosts () 
{ 
    local cur prev words cword;
    _init_completion -n : || return;
[7m--More--[27m    local options;
    [[ "$1" == -a || "$2" == -a ]] && options=-a;
    [[ "$1" == -c || "$2" == -c ]] && options+=" -c";
    _known_hosts_real $options -- "$cur"
}
_known_hosts_real () 
{ 
    local configfile flag prefix OIFS=$IFS;
    local cur user suffix aliases i host ipv4 ipv6;
    local -a kh tmpkh khd config;
    local OPTIND=1;
    while getopts "ac46F:p:" flag "$@"; do
        case $flag in 
            a)
                aliases='yes'
            ;;
            c)
                suffix=':'
            ;;
            F)
                configfile=$OPTARG
            ;;
            p)
[7m--More--[27m                prefix=$OPTARG
            ;;
            4)
                ipv4=1
            ;;
            6)
                ipv6=1
            ;;
        esac;
    done;
    [[ $# -lt $OPTIND ]] && echo "bash_completion: $FUNCNAME: missing mandator
y argument CWORD" 1>&2;
    cur=${!OPTIND};
    (( OPTIND += 1 ));
    [[ $# -ge $OPTIND ]] && echo "bash_completion: $FUNCNAME($*): unprocessed 
arguments:" $(while [[ $# -ge $OPTIND ]]; do printf '%s\n' ${!OPTIND}; shift; 
done) 1>&2;
    [[ $cur == *@* ]] && user=${cur%@*}@ && cur=${cur#*@};
    kh=();
    if [[ -n $configfile ]]; then
        [[ -r $configfile ]] && config+=("$configfile");
    else
        for i in /etc/ssh/ssh_config ~/.ssh/config ~/.ssh2/config;
[7m--More--[27m        do
            [[ -r $i ]] && config+=("$i");
        done;
    fi;
    for i in "${config[@]}";
    do
        _included_ssh_config_files "$i";
    done;
    if [[ ${#config[@]} -gt 0 ]]; then
        local IFS='
' j;
        tmpkh=($(awk 'sub("^[ \t]*([Gg][Ll][Oo][Bb][Aa][Ll]|[Uu][Ss][Ee][Rr])[
Kk][Nn][Oo][Ww][Nn][Hh][Oo][Ss][Tt][Ss][Ff][Ii][Ll][Ee][ \t]+", "") { print $0
 }' "${config[@]}" | sort -u));
        IFS=$OIFS;
        for i in "${tmpkh[@]}";
        do
            while [[ $i =~ ^([^\"]*)\"([^\"]*)\"(.*)$ ]]; do
                i=${BASH_REMATCH[1]}${BASH_REMATCH[3]};
                j=${BASH_REMATCH[2]};
                __expand_tilde_by_ref j;
                [[ -r $j ]] && kh+=("$j");
            done;
[7m--More--[27m            for j in $i;
            do
                __expand_tilde_by_ref j;
                [[ -r $j ]] && kh+=("$j");
            done;
        done;
    fi;
    if [[ -z $configfile ]]; then
        for i in /etc/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts2 /etc/known
_hosts /etc/known_hosts2 ~/.ssh/known_hosts ~/.ssh/known_hosts2;
        do
            [[ -r $i ]] && kh+=("$i");
        done;
        for i in /etc/ssh2/knownhosts ~/.ssh2/hostkeys;
        do
            [[ -d $i ]] && khd+=("$i"/*pub);
        done;
    fi;
    if [[ ${#kh[@]} -gt 0 || ${#khd[@]} -gt 0 ]]; then
        if [[ ${#kh[@]} -gt 0 ]]; then
            for i in "${kh[@]}";
            do
                while read -ra tmpkh; do
[7m--More--[27m                    set -- "${tmpkh[@]}";
                    [[ $1 == [\|\#]* ]] && continue;
                    [[ $1 == @* ]] && shift;
                    local IFS=,;
                    for host in $1;
                    do
                        [[ $host == *[*?]* ]] && continue;
                        host="${host#[}";
                        host="${host%]?(:+([0-9]))}";
                        COMPREPLY+=($host);
                    done;
                    IFS=$OIFS;
                done < "$i";
            done;
            COMPREPLY=($(compgen -W '${COMPREPLY[@]}' -- "$cur"));
        fi;
        if [[ ${#khd[@]} -gt 0 ]]; then
            for i in "${khd[@]}";
            do
                if [[ "$i" == *key_22_$cur*.pub && -r "$i" ]]; then
                    host=${i/#*key_22_/};
                    host=${host/%.pub/};
                    COMPREPLY+=($host);
[7m--More--[27m                fi;
            done;
        fi;
        for ((i=0; i < ${#COMPREPLY[@]}; i++ ))
        do
            COMPREPLY[i]=$prefix$user${COMPREPLY[i]}$suffix;
        done;
    fi;
    if [[ ${#config[@]} -gt 0 && -n "$aliases" ]]; then
        local hosts=$(command sed -ne 's/^[[:blank:]]*[Hh][Oo][Ss][Tt][[:blank
:]]\{1,\}\([^#*?%]*\)\(#.*\)\{0,1\}$/\1/p' "${config[@]}");
        COMPREPLY+=($(compgen -P "$prefix$user"             -S "$suffix" -W "$
hosts" -- "$cur"));
    fi;
    if [[ -n ${COMP_KNOWN_HOSTS_WITH_AVAHI:-} ]] && type avahi-browse &> /dev/
null; then
        COMPREPLY+=($(compgen -P "$prefix$user" -S "$suffix" -W             "$
(avahi-browse -cpr _workstation._tcp 2>/dev/null |                awk -F';' '/
^=/ { print $7 }' | sort -u)" -- "$cur"));
    fi;
    COMPREPLY+=($(compgen -W         "$(ruptime 2>/dev/null | awk '!/^ruptime:
/ { print $1 }')"         -- "$cur"));
    if [[ -n ${COMP_KNOWN_HOSTS_WITH_HOSTFILE-1} ]]; then
[7m--More--[27m        COMPREPLY+=($(compgen -A hostname -P "$prefix$user" -S "$suffix" -- "$
cur"));
    fi;
    if [[ -n $ipv4 ]]; then
        COMPREPLY=("${COMPREPLY[@]/*:*$suffix/}");
    fi;
    if [[ -n $ipv6 ]]; then
        COMPREPLY=("${COMPREPLY[@]/+([0-9]).+([0-9]).+([0-9]).+([0-9])$suffix/
}");
    fi;
    if [[ -n $ipv4 || -n $ipv6 ]]; then
        for i in "${!COMPREPLY[@]}";
        do
            [[ -n ${COMPREPLY[i]} ]] || unset -v COMPREPLY[i];
        done;
    fi;
    __ltrim_colon_completions "$prefix$user$cur"
}
_longopt () 
{ 
    local cur prev words cword split;
    _init_completion -s || return;
    case "${prev,,}" in 
[7m--More--[27m        --help | --usage | --version)
            return
        ;;
        --!(no-*)dir*)
            _filedir -d;
            return
        ;;
        --!(no-*)@(file|path)*)
            _filedir;
            return
        ;;
        --+([-a-z0-9_]))
            local argtype=$(LC_ALL=C $1 --help 2>&1 | command sed -ne         
        "s|.*$prev\[\{0,1\}=[<[]\{0,1\}\([-A-Za-z0-9_]\{1,\}\).*|\1|p");
            case ${argtype,,} in 
                *dir*)
                    _filedir -d;
                    return
                ;;
                *file* | *path*)
                    _filedir;
                    return
                ;;
[7m--More--[27m            esac
        ;;
    esac;
    $split && return;
    if [[ "$cur" == -* ]]; then
        COMPREPLY=($(compgen -W "$(LC_ALL=C $1 --help 2>&1 |             while
 read -r line; do                 [[ $line =~ --[-A-Za-z0-9]+=? ]] &&         
            printf '%s\n' ${BASH_REMATCH[0]}
            done)" -- "$cur"));
        [[ $COMPREPLY == *= ]] && compopt -o nospace;
    else
        if [[ "$1" == *@(rmdir|chroot) ]]; then
            _filedir -d;
        else
            [[ "$1" == *mkdir ]] && compopt -o nospace;
            _filedir;
        fi;
    fi
}
_mac_addresses () 
{ 
    local re='\([A-Fa-f0-9]\{2\}:\)\{5\}[A-Fa-f0-9]\{2\}';
    local PATH="$PATH:/sbin:/usr/sbin";
[7m--More--[27m    COMPREPLY+=($(        { LC_ALL=C ifconfig -a || ip link show; } 2>/dev/nul
l | command sed -ne         "s/.*[[:space:]]HWaddr[[:space:]]\{1,\}\($re\)[[:s
pace:]].*/\1/p" -ne         "s/.*[[:space:]]HWaddr[[:space:]]\{1,\}\($re\)[[:s
pace:]]*$/\1/p" -ne         "s|.*[[:space:]]\(link/\)\{0,1\}ether[[:space:]]\{
1,\}\($re\)[[:space:]].*|\2|p" -ne         "s|.*[[:space:]]\(link/\)\{0,1\}eth
er[[:space:]]\{1,\}\($re\)[[:space:]]*$|\2|p"
        ));
    COMPREPLY+=($({ arp -an || ip neigh show; } 2>/dev/null | command sed -ne 
        "s/.*[[:space:]]\($re\)[[:space:]].*/\1/p" -ne         "s/.*[[:space:]
]\($re\)[[:space:]]*$/\1/p"));
    COMPREPLY+=($(command sed -ne         "s/^[[:space:]]*\($re\)[[:space:]].*
/\1/p" /etc/ethers 2>/dev/null));
    COMPREPLY=($(compgen -W '${COMPREPLY[@]}' -- "$cur"));
    __ltrim_colon_completions "$cur"
}
_minimal () 
{ 
    local cur prev words cword split;
    _init_completion -s || return;
    $split && return;
    _filedir
}
_modules () 
[7m--More--[27m{ [K
    local modpath;
    modpath=/lib/modules/$1;
    COMPREPLY=($(compgen -W "$(command ls -RL $modpath 2>/dev/null |         c
ommand sed -ne 's/^\(.*\)\.k\{0,1\}o\(\.[gx]z\)\{0,1\}$/\1/p')" -- "$cur"))
}
_ncpus () 
{ 
    local var=NPROCESSORS_ONLN;
    [[ $OSTYPE == *linux* ]] && var=_$var;
    local n=$(getconf $var 2>/dev/null);
    printf %s ${n:-1}
}
_parse_help () 
{ 
    eval local cmd=$(quote "$1");
    local line;
    { 
        case $cmd in 
            -)
                cat
            ;;
            *)
[7m--More--[27m                LC_ALL=C "$(dequote "$cmd")" ${2:---help} 2>&1
            ;;
        esac
    } | while read -r line; do
        [[ $line == *([[:blank:]])-* ]] || continue;
        while [[ $line =~ ((^|[^-])-[A-Za-z0-9?][[:space:]]+)\[?[A-Z0-9]+([,_-
]+[A-Z0-9]+)?(\.\.+)?\]? ]]; do
            line=${line/"${BASH_REMATCH[0]}"/"${BASH_REMATCH[1]}"};
        done;
        __parse_options "${line// or /, }";
    done
}
_parse_usage () 
{ 
    eval local cmd=$(quote "$1");
    local line match option i char;
    { 
        case $cmd in 
            -)
                cat
            ;;
            *)
                LC_ALL=C "$(dequote "$cmd")" ${2:---usage} 2>&1
[7m--More--[27m            ;;
        esac
    } | while read -r line; do
        while [[ $line =~ \[[[:space:]]*(-[^]]+)[[:space:]]*\] ]]; do
            match=${BASH_REMATCH[0]};
            option=${BASH_REMATCH[1]};
            case $option in 
                -?(\[)+([a-zA-Z0-9?]))
                    for ((i=1; i < ${#option}; i++ ))
                    do
                        char=${option:i:1};
                        [[ $char != '[' ]] && printf '%s\n' -$char;
                    done
                ;;
                *)
                    __parse_options "$option"
                ;;
            esac;
            line=${line#*"$match"};
        done;
    done
}
_pci_ids () 
[7m--More--[27m{ [K
    COMPREPLY+=($(compgen -W         "$(PATH="$PATH:/sbin" lspci -n | awk '{pr
int $3}')" -- "$cur"))
}
_pgids () 
{ 
    COMPREPLY=($(compgen -W '$(command ps axo pgid=)' -- "$cur"))
}
_pids () 
{ 
    COMPREPLY=($(compgen -W '$(command ps axo pid=)' -- "$cur"))
}
_pnames () 
{ 
    local -a procs;
    if [[ "$1" == -s ]]; then
        procs=($(command ps axo comm | command sed -e 1d));
    else
        local line i=-1 OIFS=$IFS;
        IFS='
';
        local -a psout=($(command ps axo command=));
        IFS=$OIFS;
[7m--More--[27m        for line in "${psout[@]}";
        do
            if [[ $i -eq -1 ]]; then
                if [[ $line =~ ^(.*[[:space:]])COMMAND([[:space:]]|$) ]]; then
                    i=${#BASH_REMATCH[1]};
                else
                    break;
                fi;
            else
                line=${line:$i};
                line=${line%% *};
                procs+=($line);
            fi;
        done;
        if [[ $i -eq -1 ]]; then
            for line in "${psout[@]}";
            do
                if [[ $line =~ ^[[(](.+)[])]$ ]]; then
                    procs+=(${BASH_REMATCH[1]});
                else
                    line=${line%% *};
                    line=${line##@(*/|-)};
                    procs+=($line);
[7m--More--[27m                fi;
            done;
        fi;
    fi;
    COMPREPLY=($(compgen -X "<defunct>" -W '${procs[@]}' -- "$cur" ))
}
_quote_readline_by_ref () 
{ 
    if [ -z "$1" ]; then
        printf -v $2 %s "$1";
    else
        if [[ $1 == \'* ]]; then
            printf -v $2 %s "${1:1}";
        else
            if [[ $1 == \~* ]]; then
                printf -v $2 \~%q "${1:1}";
            else
                printf -v $2 %q "$1";
            fi;
        fi;
    fi;
    [[ ${!2} == \$* ]] && eval $2=${!2}
}
[7m--More--[27m_realcommand () 
{ 
    type -P "$1" > /dev/null && { 
        if type -p realpath > /dev/null; then
            realpath "$(type -P "$1")";
        else
            if type -p greadlink > /dev/null; then
                greadlink -f "$(type -P "$1")";
            else
                if type -p readlink > /dev/null; then
                    readlink -f "$(type -P "$1")";
                else
                    type -P "$1";
                fi;
            fi;
        fi
    }
}
_rl_enabled () 
{ 
    [[ "$(bind -v)" == *$1+([[:space:]])on* ]]
}
_root_command () 
[7m--More--[27m{ [K
    local PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin;
    local root_command=$1;
    _command
}
_service () 
{ 
    local cur prev words cword;
    _init_completion || return;
    [[ $cword -gt 2 ]] && return;
    if [[ $cword -eq 1 && $prev == ?(*/)service ]]; then
        _services;
        [[ -e /etc/mandrake-release ]] && _xinetd_services;
    else
        local sysvdirs;
        _sysvdirs;
        COMPREPLY=($(compgen -W '`command sed -e "y/|/ /" \
            -ne "s/^.*\(U\|msg_u\)sage.*{\(.*\)}.*$/\2/p" \
            ${sysvdirs[0]}/${prev##*/} 2>/dev/null` start stop' -- "$cur"));
    fi
}
_services () 
{ 
[7m--More--[27m    local sysvdirs;
    _sysvdirs;
    local IFS=' 	
' reset=$(shopt -p nullglob);
    shopt -s nullglob;
    COMPREPLY=($(printf '%s\n' ${sysvdirs[0]}/!($_backup_glob|functions|README
)));
    $reset;
    COMPREPLY+=($({ systemctl list-units --full --all ||                      
systemctl list-unit-files; } 2>/dev/null |         awk '$1 ~ /\.service$/ { su
b("\\.service$", "", $1); print $1 }'));
    if [[ -x /sbin/upstart-udev-bridge ]]; then
        COMPREPLY+=($(initctl list 2>/dev/null | cut -d' ' -f1));
    fi;
    COMPREPLY=($(compgen -W '${COMPREPLY[@]#${sysvdirs[0]}/}' -- "$cur"))
}
_shells () 
{ 
    local shell rest;
    while read -r shell rest; do
        [[ $shell == /* && $shell == "$cur"* ]] && COMPREPLY+=($shell);
    done 2> /dev/null < /etc/shells
}
[7m--More--[27m_signals () 
{ 
    local -a sigs=($(compgen -P "$1" -A signal "SIG${cur#$1}"));
    COMPREPLY+=("${sigs[@]/#${1}SIG/${1}}")
}
_split_longopt () 
{ 
    if [[ "$cur" == --?*=* ]]; then
        prev="${cur%%?(\\)=*}";
        cur="${cur#*=}";
        return 0;
    fi;
    return 1
}
_sysvdirs () 
{ 
    sysvdirs=();
    [[ -d /etc/rc.d/init.d ]] && sysvdirs+=(/etc/rc.d/init.d);
    [[ -d /etc/init.d ]] && sysvdirs+=(/etc/init.d);
    [[ -f /etc/slackware-version ]] && sysvdirs=(/etc/rc.d);
    return 0
}
_terms () 
[7m--More--[27m{ [K
    COMPREPLY+=($(compgen -W "$({         command sed -ne 's/^\([^[:space:]#|]
\{2,\}\)|.*/\1/p' /etc/termcap;
        { toe -a || toe; } | awk '{ print $1 }';
        find /{etc,lib,usr/lib,usr/share}/terminfo/? -type f -maxdepth 1      
       | awk -F/ '{ print $NF }';
    } 2>/dev/null)" -- "$cur"))
}
_tilde () 
{ 
    local result=0;
    if [[ $1 == \~* && $1 != */* ]]; then
        COMPREPLY=($(compgen -P '~' -u -- "${1#\~}"));
        result=${#COMPREPLY[@]};
        [[ $result -gt 0 ]] && compopt -o filenames 2> /dev/null;
    fi;
    return $result
}
_uids () 
{ 
    if type getent &> /dev/null; then
        COMPREPLY=($(compgen -W '$(getent passwd | cut -d: -f3)' -- "$cur"));
    else
[7m--More--[27m[K]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ set | more
BASH=/usr/bin/bash
BASHOPTS=checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquo
te:force_fignore:globasciiranges:histappend:interactive_comments:progcomp:prom
ptvars:sourcepath
BASH_ALIASES=()
BASH_ARGC=([0]="0")
BASH_ARGV=()
BASH_CMDS=()
BASH_COMPLETION_VERSINFO=([0]="2" [1]="10")
BASH_LINENO=()
BASH_SOURCE=()
BASH_VERSINFO=([0]="5" [1]="0" [2]="17" [3]="1" [4]="release" [5]="x86_64-pc-l
inux-gnu")
BASH_VERSION='5.0.17(1)-release'
CLUTTER_IM_MODULE=ibus
COLORTERM=truecolor
COLUMNS=78
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
DESKTOP_SESSION=ubuntu
DIRSTACK=()
DISPLAY=:0
EUID=1000
GDMSESSION=ubuntu
[7m--More--[27m[K]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ set | more[1P[1@v

Command 'sev' not found, did you mean:

  command 'sv' from deb runit (2.1.2-9.2ubuntu1)
  command 'xev' from deb x11-utils (7.7+5)
  command 'seq' from deb coreutils (8.30-3ubuntu2)
  command 'see' from deb mime-support (3.64ubuntu1)
  command 'sed' from deb sed (4.7-1)
  command 'mev' from deb gpm (1.20.7-5)
  command 'sqv' from deb sqv (0.14.0-1)
  command 'sem' from deb parallel (20161222-1.1)
  command 'sen' from deb sen (0.6.1-0.1)
  command 'sec' from deb sec (2.8.2-1)
  command 'rev' from deb util-linux (2.34-0.1ubuntu9.1)

Try: sudo apt install <deb name>

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ sev | more[1P[1@n[C[1P[1@e
SHELL=/bin/bash
SESSION_MANAGER=local/codebind:@/tmp/.ICE-unix/1674,unix/codebind:/tmp/.ICE-un
ix/1674
QT_ACCESSIBILITY=1
COLORTERM=truecolor
XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
XDG_MENU_PREFIX=gnome-
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
GTK_IM_MODULE=ibus
QT4_IM_MODULE=ibus
GNOME_SHELL_SESSION_MODE=ubuntu
SSH_AUTH_SOCK=/run/user/1000/keyring/ssh
XMODIFIERS=@im=ibus
DESKTOP_SESSION=ubuntu
SSH_AGENT_PID=1570
GTK_MODULES=gail:atk-bridge
PWD=/home/codebind
XDG_SESSION_DESKTOP=ubuntu
LOGNAME=codebind
XDG_SESSION_TYPE=x11
GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1
XAUTHORITY=/run/user/1000/gdm/Xauthority
GJS_DEBUG_TOPICS=JS ERROR;JS LOG
[7m--More--[27mWINDOWPATH=2
HOME=/home/codebind
USERNAME=codebind
IM_CONFIG_PHASE=1
LANG=en_US.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:
cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=
37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.l
ha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01
;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=0
1;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.
tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01
;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.
cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;
31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35
:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm
=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;
35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.
webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=0
1;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*
.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;
35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.a
u=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00
[7m--More--[27m;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.
spx=00;36:*.xspf=00;36:
XDG_CURRENT_DESKTOP=ubuntu:GNOME
VTE_VERSION=6003
GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/83571bde_dbca_42c3_b242_8ec41
d93ac79
INVOCATION_ID=bca2d2b8d9a74f789a643d5a5ed2f22c
MANAGERPID=1360
CLUTTER_IM_MODULE=ibus
GJS_DEBUG_OUTPUT=stderr
LESSCLOSE=/usr/bin/lesspipe %s %s
XDG_SESSION_CLASS=user
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=codebind
GNOME_TERMINAL_SERVICE=:1.258
DISPLAY=:0
SHLVL=1
QT_IM_MODULE=ibus
XDG_RUNTIME_DIR=/run/user/1000
JOURNAL_STREAM=9:31296
XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/d
esktop
[7m--More--[27mPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/
usr/local/games:/snap/bin:/etc
GDMSESSION=ubuntu
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
_=/usr/bin/env
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$     env | more[K[K[K[K[K[K[K[K[K[Kmkdir prol[Kject
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mkdir project/myfilr[1@e[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ke
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mkdir project/myfile[C[1P project/myfile[1P project/myfile[1P project/myfile[1P project/myfile[1P project/myfilet project/myfileo project/myfileu project/myfilec project/myfileh project/myfile[C project/myfile[1Pproject/myfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/fistefile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ myproject[K[K[K[K[Kojfiles=%HOME/project/myfile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ vi [K[K[Kmyprojfiles=%HOME/project/myfile[1PHOME/project/myfile$HOME/project/myfile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ myprojfiles=$HOME/project/myfile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kvi $myprojfiles/fisr[Ktefile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H"~/project/myfile/fistefile" 0 lines, 0 characters[2;1H[94m~                                                                             [3;1H~                                                                             [4;1H~                                                                             [5;1H~                                                                             [6;1H~                                                                             [7;1H~                                                                             [8;1H~                                                                             [9;1H~                                                                             [10;1H~                                                                             [11;1H~                                                                             [12;1H~                                                                             [13;1H~                                                                             [14;1H~                                                                             [15;1H~                                                                             [16;1H~                                                                             [17;1H~                                                                             [18;1H~                                                                             [19;1H~                                                                             [20;1H~                                                                             [21;1H~                                                                             [22;1H~                                                                             [23;1H~                                                                             [1;1H[?25h[?25l[m[24;1H[K[24;1H:[?2004h[?25hwq[?25l[?2004l"project/myfile/fistefile" 0 lines, 0 characters written
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ cp /etc/passwd $myprojfiles
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ touch goog[Kf[Kd;mv $HOME/good $myprojfiles
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo p[KPAH[KTH$PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/etc
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ D[KDA[K[Kdata

Command 'data' not found, did you mean:

  command 'dat' from deb liballegro4-dev (2:4.4.3.1-1)
  command 'date' from deb coreutils (8.30-3ubuntu2)

Try: sudo apt install <deb name>

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo (data)[7Pdata$data
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ ls
 ahmed.txt   [0m[01;34mfile1.txt[0m    [01;34mlab4[0m       [01;34mproject[0m         'Untitled 1.odt'
 basil.txt   file.exrc    [01;34mMusic[0m      [01;34mPublic[0m           [01;34mVideos[0m
 [01;34mDesktop[0m     file.vimrc   myfirst    s
 [01;34mDocuments[0m   foo.txt      myyfirst   [01;34mTemplates[0m
 [01;34mDownloads[0m   [01;34mlab3[0m         [01;34mPictures[0m   testmacros.txt
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ ls$datae$datac$datah$datao$data($data[C[C[C[C[C)[1P$data)[C(data) $(data)

Command 'data' not found, did you mean:

  command 'date' from deb coreutils (8.30-3ubuntu2)
  command 'dat' from deb liballegro4-dev (2:4.4.3.1-1)

Try: sudo apt install <deb name>


]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $(data)ls[K$data[C[Ke
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ $dateecho $(data)[1P)e)
Fri 16 Oct 2020 10:39:43 PM EEST
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $(date)[7P$date
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ $dateecho $(date)[7P$dateecho $(date)[C[C[C[K[1Pdate

]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo $date[5P$dateecho $(date)
Fri 16 Oct 2020 10:40:15 PM EEST
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ grep yourusernamr[Ke /etc/passwd /cut cut[C[C[C -d: -f5/ cut -d_ -sl
grep: invalid argument ‘:’ for ‘--directories’
Valid arguments are:
  - ‘read’
  - ‘recurse’
  - ‘skip’
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ grep yourusername /etc/passwd / cut -d: -f5/ cut -d_ -sl[1Plfl
grep: invalid argument ‘:’ for ‘--directories’
Valid arguments are:
  - ‘read’
  - ‘recurse’
  - ‘skip’
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ grep yourusername /etc/passwd / cut -d: -f5/ cut -d_ -fl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cecho $(date)[Kgrep yourusername /etc/passwd / cut -d: -f5/ cut -d_ -slfl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgrep yourusername /etc/passwd / cut -d: -f5/ cut -d_ -fl[C[C[C[C[C[C[Cslfl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgrep codebind /etc/passwd | cut -d: -f5 | cut -d_ -f1
codebind,,,
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ irstnme=$(grep codebind /etc/passwd | cut -d: -f5 | cut -d_ -f1)
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo how are you $firstnme
how are you
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ lastnume=&(hlhwly)
[1] 8199
hlhwly: command not found
[1]+  Done                    lastnume=
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ lastnume=&hlhwly
[1] 8210
hlhwly: command not found
[1]+  Done                    lastnume=
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ lastnume=hlhwly
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ echo how are you $firstnme $lastnume
how are you hlhwly
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ alias dir="ls -ali"
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ alias dir="ls -ali"
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ dir
total 364
393218 drwxr-xr-x 20 codebind codebind  4096 Oct 16 23:17  [0m[01;34m.[0m
393217 drwxr-xr-x  3 root     root      4096 Sep 18 15:49  [01;34m..[0m
393315 -rw-rw-r--  1 codebind codebind   100 Sep 24 10:25  ahmed.txt
393220 -rw-r--r--  1 codebind codebind   220 Sep 18 15:49  .bash_logout
393219 -rw-r--r--  1 codebind codebind  3771 Sep 18 15:49  .bashrc
400733 -rw-rw-r--  1 codebind codebind   404 Sep 30 22:59  basil.txt
393222 drwx------ 13 codebind codebind  4096 Oct  3 16:11  [01;34m.cache[0m
393228 drwx------ 13 codebind codebind  4096 Sep 20 18:58  [01;34m.config[0m
393268 drwxr-xr-x  3 codebind codebind  4096 Oct 16 21:06  [01;34mDesktop[0m
393272 drwxr-xr-x  2 codebind codebind  4096 Oct  4 18:26  [01;34mDocuments[0m
393269 drwxr-xr-x  2 codebind codebind  4096 Oct 10 17:26  [01;34mDownloads[0m
400737 -rw-rw-r--  1 codebind codebind     9 Sep 30 23:50  .excs
393801 -rw-------  1 codebind codebind 12288 Sep 24 10:11  .ff.swp
394039 drwxrwxr-x  2 codebind codebind  4096 Oct  3 17:23  [01;34mfile1.txt[0m
393812 -rw-rw-r--  1 codebind codebind   119 Sep 30 23:46  file.exrc
393809 -rw-rw-r--  1 codebind codebind    25 Sep 30 23:53  file.vimrc
393530 -rw-------  1 codebind codebind 12288 Sep 24 08:51  .fod.txt.swn
393796 -rw-------  1 codebind codebind 12288 Sep 24 08:44  .fod.txt.swo
393694 -rw-------  1 codebind codebind 12288 Sep 24 08:37  .fod.txt.swp
393365 -rw-rw-r--  1 codebind codebind   180 Oct  8 08:25  foo.txt
393805 -rw-------  1 codebind codebind 12288 Sep 24 09:50  .foo.txt.swn
393798 -rw-------  1 codebind codebind 12288 Sep 24 09:41  .foo.txt.swo
393797 -rw-------  1 codebind codebind 12288 Sep 24 08:53  .foo.txt.swp
393244 drwx------  3 codebind codebind  4096 Sep 24 10:22  [01;34m.gnupg[0m
393460 drwxrwxr-x  3 codebind codebind  4096 Oct  3 17:19  [01;34mlab3[0m
394063 drwxrwxr-x  2 codebind codebind  4096 Oct  9 08:41  [01;34mlab4[0m
393223 drwxr-xr-x  3 codebind codebind  4096 Sep 18 16:46  [01;34m.local[0m
393451 -rw-------  1 codebind codebind 12288 Sep 24 10:00  .mo.txt.swp
393463 drwx------  5 codebind codebind  4096 Sep 20 18:58  [01;34m.mozilla[0m
393803 -rw-------  1 codebind codebind 12288 Sep 24 10:04  .m.txt.swo
393800 -rw-------  1 codebind codebind 12288 Sep 24 09:35  .m.txt.swp
393273 drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mMusic[0m
393810 -rw-rw-r--  1 codebind codebind   116 Sep 25 16:21  myfirst
400727 -rw-rw-r--  1 codebind codebind    52 Sep 30 22:34  myyfirst
393274 drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mPictures[0m
393221 -rw-r--r--  1 codebind codebind   807 Sep 18 15:49  .profile
401438 drwxrwxr-x  3 codebind codebind  4096 Oct 16 22:21  [01;34mproject[0m
393271 drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mPublic[0m
393802 -rw-------  1 codebind codebind 12288 Sep 24 09:44  .re.swp
394000 -rw-rw-r--  1 codebind codebind   410 Sep 25 19:11  s
393345 -rw-------  1 codebind codebind 14257 Oct 16 21:22  save_history
393813 drwx------  2 codebind codebind  4096 Sep 24 10:22  [01;34m.ssh[0m
393788 ----r--r--  1 codebind codebind     0 Oct 10 16:18  .sudo_as_admin_successful
393354 -rw-------  1 codebind codebind 12288 Sep 25 14:30  .swn
393799 -rw-------  1 codebind codebind 12288 Sep 24 08:56  .swo
393364 -rw-------  1 codebind codebind 12288 Sep 24 08:29  .swp
393270 drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mTemplates[0m
393996 -rw-rw-r--  1 codebind codebind   128 Sep 25 16:46  testmacros.txt
394002 -rw-rw-r--  1 codebind codebind 18225 Oct  4 18:26 'Untitled 1.odt'
393279 -rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-clipboard.pid
393337 -rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-display-svga-x11.pid
393331 -rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-draganddrop.pid
393350 -rw-r-----  1 codebind codebind     5 Oct  9 14:01  .vboxclient-seamless.pid
393275 drwxr-xr-x  2 codebind codebind  4096 Sep 18 16:46  [01;34mVideos[0m
393806 -rw-------  1 codebind codebind 12288 Sep 24 10:12  .v.txt.swp
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ alias 
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias dir='ls -ali'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ unalias dir
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ alias ls="rm -f *"
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ dir
ahmed.txt  Downloads   foo.txt	myfirst   Public	testmacros.txt
basil.txt  file1.txt   lab3	myyfirst  s		Untitled\ 1.odt
Desktop    file.exrc   lab4	Pictures  save_history	Videos
Documents  file.vimrc  Music	project   Templates
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mv .bash_history save_history
mv: cannot stat '.bash_history': No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mv .bash_history save_history
mv: cannot stat '.bash_history': No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mv .bash_history save_history
mv: cannot stat '.bash_history': No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ cp abcESCESC nwefilename
cp: cannot stat 'abcESCESC': No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ cp abcESCESC nwefilename
cp: cannot stat 'abcESCESC': No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ clear
[H[2J[3J]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less -profile
Missing filename ("less --help" for help)
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less -profile[1Pprofile.profile
[?1049h[22;0;0t[?1h=# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

[7m.profile[27m[K[K# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi
[7m(END)[27m[K[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K [KESCESC[K  [K[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[1m~[0m
[7m(END)[27m[K[K[?1l>[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ less .profile[1P .profile[1P .profile[1P .profile[1P .profilec .profilep .profile[C[C[C[C[C[C[C[C[C save_profile
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ cp .profile save_profile[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pless .profilebprofileaprofilesprofilehprofile_profile
.bash_profile: No such file or directory
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ g[Kvi .profile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H".profile" 27 lines, 807 characters[1;1H# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then[15;9H. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi[1;1H[?25h#
#
#
#
#

#
#
#

#
i
 
 [15;8H
 
f

#
i
 
f
[?25l[1;23r[23;1H
[1;24r[23;1H# set PATH so it includes user's private bin if it exists[24;1H[K[23;2H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hif [ -d "$HOME/.local/bin" ] ; theni[?25h[?25l[1;23r[23;1H
[1;24r[23;5HPATH="$HOME/.local/bin:$PATH" [?25h[?25l[1;23r[23;1H
[1;24r[23;1Hfi[?25h[?2004l[>4;mi[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25lP[?25h[?25lA[?25h[?25lT[?25h[?25lH[?25h[?25l=[?25h[?25l$[?25h[?25lP[?25h[?25lA[?25h[?25lT[?25h[?25lH[?25h[?2004h[>4;2m[?25l
:[?2004h[?25hWQ[?25l[97m[41mE492: Not an editor command: WQ[23;10H[?25h[?25l[m[24;1H[K[24;1H:[?2004h[?25hwq[?25l[?2004l".profile" 28 lines, 818 characters written
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ mkdir dir
]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ vi .p-r[K[Kmkdir dirvi .profile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H".profile" 28 lines, 818 characters[1;1H# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then[15;9H. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi[1;1H[?25h












[15;8H







[?25l[1;23r[23;1H
[1;24r[23;1H# set PATH so it includes user's private bin if it exists[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hif [ -d "$HOME/.local/bin" ] ; then[?25h[?25l[1;23r[23;1H
[1;24r[23;5HPATH="$HOME/.local/bin:$PATH"[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hfi[?25h[?25l[1;23r[23;1H
[1;24r[23;1HPATH=$PATH[?25hPATH=$PAT[?2004l[>4;m[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25lP[?25h[?25lA[?25h[?25lH[?25h[?25l=[?25h[?2004h[>4;2m[1;1H






[9;8H













PAH[?25l=[23;4H[K[23;3H[?25h[?25l=[23;3H[K[23;2H[?25h[?25l=[23;2H[K[23;1H[?25h[?2004l[>4;m[?25lP=[?25h[?25lA=[?25h[?25lT=[?25h[?25lH=[?25h[?2004h[>4;2m[?25l
:[?2004h[?25hQ[?25l[24;2H[K[24;2H[?25hq![?25l[?2004l[24;1H[K[24;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ vi .profile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H".profile" 28 lines, 818 characters[1;1H# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then[15;9H. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi[1;1H[?25h












[15;8H







[?25l[1;23r[23;1H
[1;24r[23;1H# set PATH so it includes user's private bin if it exists[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hif [ -d "$HOME/.local/bin" ] ; then[?25h[?25l[1;23r[23;1H
[1;24r[23;5HPATH="$HOME/.local/bin:$PATH"[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hfi[?25h[?25l[1;23r[23;1H
[1;24r[23;1HPATH=$PATH[?25h[?2004l[>4;m[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25lm[?25h[?25ly[?25h[?25l [?25h[?25l[?25h[?25lp[?25h[?25lr[?25h[?25lo[?25h[?25lj[?25h[?25le[?25h[?25lc[?25h[?25lt[?25h[?25l=[?25h[?25l$[?25h[?25lH[?25h[?25lO[?25h[?25lM[?25h[?25lE[?25h[?25lL[?25h[?25lD[?25h[?25lI[?25h[?25lR[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25l[23;18H[K[23;17H[?25h[?2004l[>4;m[?25lC[23;2H[K[23;2H[?25h[?2004h[>4;2m[?25l
:[?2004h[?25hq![?25l[?2004l[24;1H[K[24;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ vi .profile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H".profile" 28 lines, 818 characters[1;1H# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then[15;9H. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi[1;1H[?25h












[15;8H







[?25l[1;23r[23;1H
[1;24r[23;1H# set PATH so it includes user's private bin if it exists[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hif [ -d "$HOME/.local/bin" ] ; then[?25h[?25l[1;23r[23;1H
[1;24r[23;5HPATH="$HOME/.local/bin:$PATH"[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hfi[?25h[?25l[1;23r[23;1H
[1;24r[23;1HPATH=$PATH[?25h[?2004l[>4;m[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25lm[?25h[?25ly[?25h[?25lp[?25h[?25lr[?25h[?25lo[?25h[?25lj[?25h[?25le[?25h[?25lc[?25h[?25lt[?25h[?25l=[?25h[?25l$[?25h[?25lh[?25h[?25lo[?25h[?25lm[?25h[?25le[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25l[23;12H[K[23;11H[?25h[?2004l[>4;m[?25lC[23;2H[K[23;2H[?25h[?2004h[>4;2m[?2004l[>4;m[?25lC[?25h[?2004h[>4;2m[?25l[23;1H[K[23;1H[?25h[?2004l[>4;m[?25lm[?25h[?25ly[?25h[?25lp[?25h[?25lr[?25h[?25li[?25h[?2004h[>4;2m[?25l[23;5H[K[23;4H[?25h[?2004l[>4;m[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?2004h[>4;2m[?25l
:[?2004h[?25hq![?25l[?2004l[24;1H[K[24;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ vi .profile
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;24r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[24;1H".profile" 28 lines, 818 characters[1;1H# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then[15;9H. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi[1;1H[?25h












[15;8H







[?25l[1;23r[23;1H
[1;24r[23;1H# set PATH so it includes user's private bin if it exists[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hif [ -d "$HOME/.local/bin" ] ; then[?25h[?25l[1;23r[23;1H
[1;24r[23;5HPATH="$HOME/.local/bin:$PATH"[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hfi[?25h[?25l[1;23r[23;1H
[1;24r[23;1HPATH=$PATH[?25h[?2004l[>4;m[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25lm[?25h[?25ly[?25h[?25lp[?25h[?25lr[?25h[?25lo[?25h[?25lj[?25h[?25l=[?25h[?25l$[?25h[?25lH[?25h[?25lO[?25h[?25lM[?25h[?25lE[?25h[?25l/[?25h[?25ld[?25h[?25li[?25h[?25lr[?25h[?2004h[>4;2m[?25l
:[?2004h[?25hwq[?25l[?2004l".profile" 29 lines, 835 characters written
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;codebind@codebind: ~[01;32mcodebind@codebind[00m:[01;34m~[00m$ exit
exit

Script done on 2020-10-16 23:50:42+03:00 [COMMAND_EXIT_CODE="0"]
